/* config.in.  Generated from configure.ac by autoheader.  */

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD @AC_APPLE_UNIVERSAL_BUILD@

/* Define to 1 if you want more run-time sanity checks. */
#cmakedefine01 CHECKING_P 

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#cmakedefine CRAY_STACKSEG_END @CRAY_STACKSEG_END@

/* Define to 1 if using `alloca.c'. */
#cmakedefine C_ALLOCA @C_ALLOCA@

/* Define if you want assertions enabled. This is a cheap check. */
#cmakedefine ENABLE_ASSERT_CHECKING @ENABLE_ASSERT_CHECKING@

/* Define to enable system headers canonicalization. */
#cmakedefine ENABLE_CANONICAL_SYSTEM_HEADERS @ENABLE_CANONICAL_SYSTEM_HEADERS@

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#cmakedefine ENABLE_NLS @ENABLE_NLS@

/* Define to get calls to the valgrind runtime enabled. */
#cmakedefine ENABLE_VALGRIND_ANNOTATIONS @ENABLE_VALGRIND_ANNOTATIONS@

/* Define if you want to workaround valgrind (a memory checker) warnings about
   possible memory leaks because of libcpp use of interior pointers. */
#cmakedefine ENABLE_VALGRIND_CHECKING @ENABLE_VALGRIND_CHECKING@

/* Define to 1 if you have `alloca', as a function or macro. */
#cmakedefine HAVE_ALLOCA @HAVE_ALLOCA@

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#cmakedefine HAVE_ALLOCA_H @HAVE_ALLOCA_H@

/* Define to 1 if you have the `clearerr_unlocked' function. */
#cmakedefine HAVE_CLEARERR_UNLOCKED @HAVE_CLEARERR_UNLOCKED@

/* Define to 1 if you have the declaration of `abort', and to 0 if you don't.
   */
#cmakedefine01 HAVE_DECL_ABORT 

/* Define to 1 if you have the declaration of `asprintf', and to 0 if you
   don't. */
#cmakedefine01 HAVE_DECL_ASPRINTF 

/* Define to 1 if you have the declaration of `basename(char *)', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_BASENAME 

/* Define to 1 if you have the declaration of `clearerr_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_CLEARERR_UNLOCKED 

/* Define to 1 if you have the declaration of `errno', and to 0 if you don't.
   */
#cmakedefine01 HAVE_DECL_ERRNO 

/* Define to 1 if you have the declaration of `feof_unlocked', and to 0 if you
   don't. */
#cmakedefine01 HAVE_DECL_FEOF_UNLOCKED

/* Define to 1 if you have the declaration of `ferror_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FERROR_UNLOCKED 

/* Define to 1 if you have the declaration of `fflush_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FFLUSH_UNLOCKED 

/* Define to 1 if you have the declaration of `fgetc_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FGETC_UNLOCKED 

/* Define to 1 if you have the declaration of `fgets_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FGETS_UNLOCKED 

/* Define to 1 if you have the declaration of `fileno_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FILENO_UNLOCKED 

/* Define to 1 if you have the declaration of `fprintf_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FPRINTF_UNLOCKED 

/* Define to 1 if you have the declaration of `fputc_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FPUTC_UNLOCKED 

/* Define to 1 if you have the declaration of `fputs_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FPUTS_UNLOCKED 

/* Define to 1 if you have the declaration of `fread_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FREAD_UNLOCKED 

/* Define to 1 if you have the declaration of `fwrite_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_FWRITE_UNLOCKED 

/* Define to 1 if you have the declaration of `getchar_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_GETCHAR_UNLOCKED 

/* Define to 1 if you have the declaration of `getc_unlocked', and to 0 if you
   don't. */
#cmakedefine01 HAVE_DECL_GETC_UNLOCKED 

/* Define to 1 if you have the declaration of `getopt', and to 0 if you don't.
   */
#cmakedefine01 HAVE_DECL_GETOPT 

/* Define to 1 if you have the declaration of `putchar_unlocked', and to 0 if
   you don't. */
#cmakedefine01 HAVE_DECL_PUTCHAR_UNLOCKED 

/* Define to 1 if you have the declaration of `putc_unlocked', and to 0 if you
   don't. */
#cmakedefine01 HAVE_DECL_PUTC_UNLOCKED 

/* Define to 1 if you have the declaration of `vasprintf', and to 0 if you
   don't. */
#cmakedefine01 HAVE_DECL_VASPRINTF 

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H @HAVE_FCNTL_H@

/* Define to 1 if you have the `feof_unlocked' function. */
#cmakedefine HAVE_FEOF_UNLOCKED @HAVE_FEOF_UNLOCKED@

/* Define to 1 if you have the `ferror_unlocked' function. */
#cmakedefine HAVE_FERROR_UNLOCKED @HAVE_FERROR_UNLOCKED@

/* Define to 1 if you have the `fflush_unlocked' function. */
#cmakedefine HAVE_FFLUSH_UNLOCKED @HAVE_FFLUSH_UNLOCKED@

/* Define to 1 if you have the `fgetc_unlocked' function. */
#cmakedefine HAVE_FGETC_UNLOCKED @HAVE_FGETC_UNLOCKED@

/* Define to 1 if you have the `fgets_unlocked' function. */
#cmakedefine HAVE_FGETS_UNLOCKED @HAVE_FGETS_UNLOCKED@

/* Define to 1 if you have the `fileno_unlocked' function. */
#cmakedefine HAVE_FILENO_UNLOCKED @HAVE_FILENO_UNLOCKED@

/* Define to 1 if you have the `fprintf_unlocked' function. */
#cmakedefine HAVE_FPRINTF_UNLOCKED @HAVE_FPRINTF_UNLOCKED@

/* Define to 1 if you have the `fputc_unlocked' function. */
#cmakedefine HAVE_FPUTC_UNLOCKED @HAVE_FPUTC_UNLOCKED@

/* Define to 1 if you have the `fputs_unlocked' function. */
#cmakedefine HAVE_FPUTS_UNLOCKED @HAVE_FPUTS_UNLOCKED@

/* Define to 1 if you have the `fread_unlocked' function. */
#cmakedefine HAVE_FREAD_UNLOCKED @HAVE_FREAD_UNLOCKED@

/* Define to 1 if you have the `fwrite_unlocked' function. */
#cmakedefine HAVE_FWRITE_UNLOCKED @HAVE_FWRITE_UNLOCKED@

/* Define to 1 if you have the `getchar_unlocked' function. */
#cmakedefine HAVE_GETCHAR_UNLOCKED @HAVE_GETCHAR_UNLOCKED@

/* Define to 1 if you have the `getc_unlocked' function. */
#cmakedefine HAVE_GETC_UNLOCKED @HAVE_GETC_UNLOCKED@

/* Define if you have the iconv() function. */
#cmakedefine HAVE_ICONV @HAVE_ICONV@

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */
#cmakedefine HAVE_LANGINFO_CODESET @HAVE_LANGINFO_CODESET@

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H @HAVE_LIMITS_H@

/* Define to 1 if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H @HAVE_LOCALE_H@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Define to 1 if libc includes obstacks. */
#cmakedefine HAVE_OBSTACK @HAVE_OBSTACK@

/* Define to 1 if you have the `putchar_unlocked' function. */
#cmakedefine HAVE_PUTCHAR_UNLOCKED @HAVE_PUTCHAR_UNLOCKED@

/* Define to 1 if you have the `putc_unlocked' function. */
#cmakedefine HAVE_PUTC_UNLOCKED @HAVE_PUTC_UNLOCKED@

/* Define to 1 if you can assemble SSE4 insns. */
#cmakedefine HAVE_SSE4 @HAVE_SSE4@

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H @HAVE_STDDEF_H@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define to 1 if you have the <sys/file.h> header file. */
#cmakedefine HAVE_SYS_FILE_H @HAVE_SYS_FILE_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define if <sys/types.h> defines \`uchar'. */
#cmakedefine HAVE_UCHAR @HAVE_UCHAR@

/* Define to 1 if the system has the type `uintptr_t'. */
#cmakedefine HAVE_UINTPTR_T @HAVE_UINTPTR_T@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define as const if the declaration of iconv() needs const. */
#cmakedefine ICONV_CONST @ICONV_CONST@

/* Define to the name of this package. */
#cmakedefine PACKAGE @PACKAGE@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME @PACKAGE_NAME@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING @PACKAGE_STRING@

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL @PACKAGE_URL@

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@

/* The size of `int', as computed by sizeof. */
#cmakedefine SIZEOF_INT @SIZEOF_INT@

/* The size of `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#cmakedefine STACK_DIRECTION @STACK_DIRECTION@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Define if you can safely include both <string.h> and <strings.h>. */
#cmakedefine STRING_WITH_STRINGS @STRING_WITH_STRINGS@

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME @TIME_WITH_SYS_TIME@

/* Define to 1 if your <sys/time.h> declares `struct tm'. */
#cmakedefine TM_IN_SYS_TIME @TM_IN_SYS_TIME@

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif


/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#cmakedefine WORDS_BIGENDIAN
# endif
#endif

/* Enable large inode numbers on Mac OS X 10.5.  */
#ifndef _DARWIN_USE_64_BIT_INODE
# define _DARWIN_USE_64_BIT_INODE 1
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS @_FILE_OFFSET_BITS@

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES @_LARGE_FILES@

/* Define to 1 if on MINIX. */
#cmakedefine _MINIX @_MINIX@

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#cmakedefine _POSIX_1_SOURCE @_POSIX_1_SOURCE@

/* Define to 1 if you need to in order for `stat' and other things to work. */
#cmakedefine _POSIX_SOURCE @_POSIX_SOURCE@

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T @_UINT64_T@

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const @const@

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline @inline@
#endif

/* Define to `long int' if <sys/types.h> does not define. */
#cmakedefine off_t @off_t@

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine ptrdiff_t @ptrdiff_t@

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t @size_t@

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine ssize_t @ssize_t@

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t @uint64_t@

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#cmakedefine uintptr_t @uintptr_t@
