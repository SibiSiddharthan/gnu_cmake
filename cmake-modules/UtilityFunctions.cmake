INCLUDE (CheckTypeSize)
INCLUDE(CheckIncludeFile)
INCLUDE(CheckIncludeFileCXX)
INCLUDE(CheckSymbolExists)
INCLUDE(CheckFunctionExists)


function(check_c_headers ...)
	math(EXPR STOP "${ARGC} -1" )
	foreach(i RANGE ${STOP})
		set(var ${ARGV${i}})
		string(REPLACE "/" "_" var ${var})
		string(REPLACE "." "_" var ${var})
		string(TOUPPER ${var} var)
		string(PREPEND var "HAVE_")
		check_include_file(${ARGV${i}} ${var})
	endforeach()
endfunction()

function(check_cxx_headers ...)
	math(EXPR STOP "${ARGC} -1" )
	foreach(i RANGE ${STOP})
		set(var ${ARGV${i}})
		string(REPLACE "/" "_" var ${var})
		string(REPLACE "." "_" var ${var})
		string(TOUPPER ${var} var)
		string(PREPEND var "HAVE_")
		check_include_file_cxx(${ARGV${i}} ${var})
	endforeach()
endfunction()

function(check_functions ...) 
	math(EXPR STOP "${ARGC} -1" )
	foreach(i RANGE ${STOP})
		set(var ${ARGV${i}})
		string(TOUPPER ${var} var)
		string(PREPEND var "HAVE_")
		check_function_exists(${ARGV${i}} ${var})
	endforeach()
endfunction()

function(check_functions_declarations ...)
	check_c_headers(stdio.h sys/types.h sys/stat.h stdlib.h stddef.h stdlib.h string.h strings.h inttypes.h stdint.h unistd.h )
	list(APPEND c_include stdio.h)
	if(HAVE_SYS_TYPES_H)
	list(APPEND c_include sys/types.h)
	endif()
	if(HAVE_SYS_STAT_H)
	list(APPEND c_include sys/stat.h)
	endif()
	if( HAVE_STDLIB_H)
	list(APPEND c_include stdlib.h)
	endif()
	if(HAVE_STDDEF_H)
	list(APPEND c_include stddef.h)
	endif()
	if( HAVE_STRING_H)
	list(APPEND c_include string.h)
	endif()
	if( HAVE_STRINGS_H)
	list(APPEND c_include strings.h)
	endif()
	if( HAVE_INTTYPES_H)
	list(APPEND c_include inttypes.h)
	endif()
	if( HAVE_STDINT_H)
	list(APPEND c_include stdint.h)
	endif()
	if( HAVE_UNISTD_H)
	list(APPEND c_include unistd.h)
	endif()
	math(EXPR STOP "${ARGC} -1" )
	foreach(i RANGE ${STOP})
		set(var ${ARGV${i}})
		string(TOUPPER ${var} var)
		string(PREPEND var "HAVE_DECL_")
		check_symbol_exists(${ARGV${i}} "${c_include}" ${var})
	endforeach()
endfunction()

function(check_types ...)
	math(EXPR STOP "${ARGC} -1" )
	foreach(i RANGE ${STOP})
		set(var ${ARGV${i}})
		string(REPLACE " " "_" var ${var})
		string(REPLACE "*" "P" var ${var})
		string(TOUPPER ${var} var)
		set(have_var ${var})
		string(PREPEND have_var "HAVE_")
		string(PREPEND var "SIZEOF_")
		check_type_size(${ARGV${i}} ${var})
		if(${var})
		set(${have_var} 1 PARENT_SCOPE)
		endif()
	endforeach()
endfunction()